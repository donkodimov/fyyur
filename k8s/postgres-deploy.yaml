---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: postgres
        imagePullPolicy: Never
        env:
        
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flaskapi-secrets
              key: POSTGRES_PASSWORD
        
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: flaskapi-configmap
              key: POSTGRES_DB
        
        # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "postgres"

        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }

        ports:
        - containerPort: 5432
          name: db-container

        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5

        volumeMounts:
          - name: postgres-persistent-storage
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim


---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: db
spec:
  ports:
  - port: 5432
    protocol: TCP
    name: postgres
  selector:
    app: db
  type: LoadBalancer